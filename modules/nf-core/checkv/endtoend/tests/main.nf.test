nextflow_process {

    name "Test Process CHECKV_ENDTOEND"
    script "../main.nf"
    process "CHECKV_ENDTOEND"


    setup {
        run("CHECKV_DOWNLOADDATABASE") {
            script "../../downloaddatabase/main.nf"
        }
    }


    test("fasta.gz") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test1' ],
                    file("${projectDir}/assets/test-datasets/fastas/lambda.fasta.gz", checkIfExists: true)
                ]
                input[1] = CHECKV_DOWNLOADDATABASE.out.checkv_db
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.quality_summary,
                    process.out.contamination,
                    file(process.out.completeness[0][1]).name,
                    process.out.viruses,
                    process.out.proteins,
                    process.out.versions
                    ).match()
                }
            )
        }
    }


    test("fasta.gz - stub") {
        options "-stub"
        when {
            process {
                """
                input[0] = [
                    [ id:'test1' ],
                    file("${projectDir}/assets/test-datasets/fastas/lambda.fasta.gz", checkIfExists: true)
                ]
                input[1] = CHECKV_DOWNLOADDATABASE.out.checkv_db
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
            )
        }
    }
}
