nextflow_process {

    name "Test Process: PLASS_PENGUIN"
    script "../main.nf"
    process "PLASS_PENGUIN"


    test("fastq.gz single") {
        when {
            process {
                """
                input[0] = [
                    [ id: 'test1', single_end:true ],
                    [
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_1.fastq.gz', checkIfExists: true),
                    ]
                ]
                """
            }
        }
        then {
            assertAll (
                { assert process.success },
                { assert snapshot(
                    process.out.contigs,
                    process.out.versions
                    ).match()
                },
                { assert new File(process.out.log[0][1]).exists() }
            )
        }
    }


        test("fastq.gz paired") {
        when {
            process {
                """
                input[0] = [
                    [ id: 'test1', single_end:false ],
                    [
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_2.fastq.gz', checkIfExists: true)
                    ]
                ]
                """
            }
        }
        then {
            assertAll (
                { assert process.success },
                { assert snapshot(
                    process.out.contigs,
                    process.out.versions
                    ).match()
                },
                { assert new File(process.out.log[0][1]).exists() }
            )
        }
    }


    test("fastq.gz paired coassembly") {
        when {
            process {
                """
                input[0] = [
                    [ id: 'test1', single_end:false ],
                    [
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_2.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test2_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test2_2.fastq.gz', checkIfExists: true)
                    ]
                ]
                """
            }
        }
        then {
            assertAll (
                { assert process.success },
                { assert snapshot(
                    process.out.contigs,
                    process.out.versions
                    ).match()
                },
                { assert new File(process.out.log[0][1]).exists() }
            )
        }
    }


    test("fastq.gz single coassembly") {
        when {
            process {
                """
                input[0] = [
                    [ id: 'test1', single_end:true ],
                    [
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test2_1.fastq.gz', checkIfExists: true),
                    ]
                ]
                """
            }
        }
        then {
            assertAll (
                { assert process.success },
                { assert snapshot(
                    process.out.contigs,
                    process.out.versions
                    ).match()
                },
                { assert new File(process.out.log[0][1]).exists() }
            )
        }
    }


    test("fastq.gz paired - stub") {
        options "-stub"
        when {
            process {
                """
                input[0] = [
                    [ id: 'test1' ],
                    [
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_2.fastq.gz', checkIfExists: true)
                    ]
                ]
                """
            }
        }
        then {
            assertAll (
                { assert process.success },
                { assert snapshot(
                    process.out.contigs,
                    process.out.versions
                    ).match()
                },
                { assert new File(process.out.log[0][1]).exists() }
            )
        }
    }
}
