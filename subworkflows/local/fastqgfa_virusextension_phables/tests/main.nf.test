nextflow_workflow {

    name "Test Subworkflow: FASTQGFA_VIRUSEXTENSION_PHABLES"
    script "subworkflows/local/fastqgfa_virusextension_phables/main.nf"
    workflow "FASTQGFA_VIRUSEXTENSION_PHABLES"

    setup {
        run("PHABLES_INSTALL") {
            script "../../../../modules/local/phables/install/main.nf"
        }
    }

    test("fastq.gz + gfa + no db") {
        when {
            workflow {
                """
                input[0] = Channel.of(
                    [
                        [ id: 'test1' ],
                        [
                            file("${projectDir}/assets/test-datasets/fastqs/test1_1.fastq.gz", checkIfExists: true),
                            file("${projectDir}/assets/test-datasets/fastqs/test1_2.fastq.gz", checkIfExists: true)
                        ]
                    ],
                    [
                        [ id: 'test2' ],
                        [
                            file("${projectDir}/assets/test-datasets/fastqs/test1_1.fastq.gz", checkIfExists: true),
                            file("${projectDir}/assets/test-datasets/fastqs/test1_2.fastq.gz", checkIfExists: true)
                        ]
                    ]
                )
                input[1] = Channel.of(
                    [
                        [ id: 'test1' ],
                        [
                            file("${projectDir}/assets/test-datasets/gfa/test1.assembly.gfa", checkIfExists: true),
                        ]
                    ],
                    [
                        [ id: 'test2' ],
                        [
                            file("${projectDir}/assets/test-datasets/gfa/test1.assembly.gfa", checkIfExists: true),
                        ]
                    ]
                )
                input[2] = null
                """
            }
        }
        then {
            assertAll (
                { assert workflow.success },
                { assert snapshot(workflow.out.versions).match() },
                { assert new File(workflow.out.phables_fasta[0][1]).exists() }
            )
        }
    }


    test("fastq.gz + gfa + db") {
        when {
            workflow {
                """
                input[0] = Channel.of(
                    [
                        [ id: 'test1' ],
                        [
                            file("${projectDir}/assets/test-datasets/fastqs/test1_1.fastq.gz", checkIfExists: true),
                            file("${projectDir}/assets/test-datasets/fastqs/test1_2.fastq.gz", checkIfExists: true)
                        ]
                    ],
                    [
                        [ id: 'test2' ],
                        [
                            file("${projectDir}/assets/test-datasets/fastqs/test1_1.fastq.gz", checkIfExists: true),
                            file("${projectDir}/assets/test-datasets/fastqs/test1_2.fastq.gz", checkIfExists: true)
                        ]
                    ]
                )
                input[1] = Channel.of(
                    [
                        [ id: 'test1' ],
                        [
                            file("${projectDir}/assets/test-datasets/gfa/test1.assembly.gfa", checkIfExists: true),
                        ]
                    ],
                    [
                        [ id: 'test2' ],
                        [
                            file("${projectDir}/assets/test-datasets/gfa/test1.assembly.gfa", checkIfExists: true),
                        ]
                    ]
                )
                input[2] = null
                """
            }
        }
        then {
            assertAll (
                { assert workflow.success },
                { assert snapshot(workflow.out).match() },
                { assert new File(workflow.out.phables_fasta[0][1]).exists() }
            )
        }
    }
}
