/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    HoffLab/phageannotator Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {
    // Input options
    input                       = null
    logan_accessions            = null
    use_uw_https_proxy          = false

    // TODO: Add option to download reads from SRA
    sra_accessions              = null
    fastq_download_method       = "sratools"

    // preprocessing options
    perform_run_merging         = false
    run_fastp                   = false
    fastp_args                  = null
    run_bowtie2_host_removal    = false
    bowtie2_igenomes_host       = "GRCh38"
    bowtie2_custom_host_fasta   = null
    bowtie2_args                = null

    // virus enrichment options
    run_viromeqc                = false
    viromeqc_db                 = null
    save_viromeqc_db            = false
    viromeqc_args               = null

    // assembly options (metaSPAdes)
    run_metaspades_single       = false
    metaspades_single_args      = null
    run_metaspades_coassembly   = false
    metaspades_coassembly_args  = null
    metaspades_use_scaffolds    = false

    // assembly options (MEGAHIT)
    run_megahit_single          = false
    megahit_single_args         = null
    run_megahit_coassembly      = false
    megahit_coassembly_args     = null

    // assembly options (penguin)
    run_penguin_single          = false
    penguin_single_args         = null
    run_penguin_coassembly      = false
    penguin_coassembly_args     = null

    // assembly stats/filtering options
    run_seqkit_stats            = false
    run_seqkit_seq              = false
    seqkit_seq_min_len          = 1500

    // virus classification options
    run_genomad                 = false
    genomad_db                  = null
    save_genomad_db             = false
    genomad_min_viral_score     = 0.7
    genomad_max_fdr             = 0.1

    // virus contig extension
    run_cobra                   = false
    cobra_coverm_args           = null
    cobra_mink                  = 21
    cobra_maxk                  = 55
    cobra_args                  = null

    // virus quality assessment options
    run_checkv                  = false
    checkv_db                   = null
    save_checkv_db              = false
    checkv_args                 = null
    run_tantan                  = false
    tantan_args                 = "-s 0.9"
    run_nucleotide_stats        = false

    // virus quality filtering options
    run_sequence_filtering      = false
    contigs_to_keep             = null
    keep_proviruses             = false
    ignore_warnings             = false
    checkv_min_length           = null
    checkv_min_completeness     = null
    min_cds_density             = null
    max_tantan_frac             = null
    max_kmer_freq               = null
    max_n_frac                  = null

    // virus dereplication options
    run_blast_dereplication     = false
    derep_blastn_args           = "-perc_identity 99 -max_target_seqs 25000 -outfmt '6 std qlen slen'"
    blast_derep_min_ani         = 100
    blast_derep_min_qcov        = 0
    blast_derep_min_tcov        = 100
    seqkit_split_chunk_size     = 100

    // virus clustering options
    run_blast_clustering        = false
    blastn_args                 = "-perc_identity 90 -max_target_seqs 25000 -outfmt '6 std qlen slen'"
    blast_cluster_min_ani       = 95
    blast_cluster_min_qcov      = 0
    blast_cluster_min_tcov      = 85

    // read alignment options
    run_coverm                  = false
    coverm_args                 = null

    // phage taxonomy options
    run_taxmyphage              = false
    run_reference_skani         = false

    // phage host options
    run_iphop                   = false
    iphop_db                    = null
    save_iphop_db               = false
    iphop_test_db               = false
    iphop_min_score             = 90
    run_phist                   = false
    phist_min_shared_kmers      = null
    phist_min_prop_kmers        = null

    // phage function options
    run_pharokka                = false
    pharokka_db                 = null
    save_pharokka_db            = false
    run_phold                   = false
    run_phynteny                = false

    // phage lifestyle options
    run_bacphlip                = false
    run_integrase_check         = false

    // prophage activity options
    run_propagate               = false
    propagate_args              = null
    run_prophage_tracer         = false
    prophage_tracer_args        = null

    // Cleanup options
    remove_intermediate_files   = false



    // References
    genome                     = null
    igenomes_base              = 's3://ngi-igenomes/igenomes/'
    igenomes_ignore            = false

    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    outdir                     = null
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    version                    = false

    // Config options
    config_profile_name        = null
    config_profile_description = null
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

    // Schema validation default options
    validationFailUnrecognisedParams = false
    validationLenientMode            = false
    validationSchemaIgnoreParams     = 'genomes,igenomes_base'
    validationShowHiddenParams       = false
    validate_params                  = true

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Load HoffLab/phageannotator custom profiles from different institutions.
// Warning: Uncomment only if a pipeline-specific institutional config already exists on nf-core/configs!
// try {
//   includeConfig "${params.custom_config_base}/pipeline/phageannotator.config"
// } catch (Exception e) {
//   System.err.println("WARNING: Could not load nf-core/config/phageannotator profiles: ${params.custom_config_base}/pipeline/phageannotator.config")
// }
profiles {
    debug {
        dumpHashes             = true
        process.beforeScript   = 'echo $HOSTNAME'
        cleanup                = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        channels               = ['conda-forge', 'bioconda', 'defaults']
        apptainer.enabled      = false
    }
    mamba {
        conda.enabled          = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    docker {
        docker.enabled         = true
        conda.enabled          = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
        docker.runOptions      = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions      = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    podman {
        podman.enabled         = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    shifter {
        shifter.enabled        = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    charliecloud {
        charliecloud.enabled   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        apptainer.enabled      = false
    }
    apptainer {
        apptainer.enabled      = true
        apptainer.autoMounts   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    gitpod {
        executor.name          = 'local'
        executor.cpus          = 4
        executor.memory        = 8.GB
    }
    test_reads_w_assembly   { includeConfig 'conf/test_reads_w_assembly.config' }
    test_reads_only         { includeConfig 'conf/test_reads_only.config'       }
}

// Read in specific config relating to workflow.
includeConfig 'workflows/phageannotator/nextflow.config'

// Set default registry for Apptainer, Docker, Podman and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry   = 'quay.io'
docker.registry      = 'quay.io'
podman.registry      = 'quay.io'
singularity.registry = 'quay.io'

// Nextflow plugins
plugins {
    id 'nf-validation@1.1.3' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

// Load igenomes.config if required
if (!params.igenomes_ignore) {
    includeConfig 'conf/igenomes.config'
} else {
    params.genomes = [:]
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'HoffLab/phageannotator'
    author          = """@CarsonJM"""
    homePage        = 'https://github.com/HoffLab/phageannotator'
    description     = """A pipeline for assembling, identifying, and annotating phages from (meta-)genomic sequences."""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=23.04.0'
    version         = '1.0dev'
    doi             = ''
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
